generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // relations
  issuesCreated  Issue[] @relation("UserIssuesCreated")
  issuesAssigned Issue[] @relation("UserIssuesAssigned")
}

model Issue {
  id          String   @id @default(uuid())
  title       String
  description String
  status      Status   @default(OPEN)
  priority    Priority @default(MEDIUM)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relationships
  creator    User    @relation("UserIssuesCreated", fields: [creatorId], references: [id]) // references User
  creatorId  String
  assignee   User?   @relation("UserIssuesAssigned", fields: [assigneeId], references: [id]) // references User
  assigneeId String?

  // AI Suggested Fixes (if needed)
  aiSuggestions AISuggestion[]
}

model AISuggestion {
  id         String   @id @default(uuid())
  issue      Issue    @relation(fields: [issueId], references: [id]) // references issueID 
  issueId    String
  suggestion String
  createdAt  DateTime @default(now())
}

enum Role {
  USER
  ADMIN
}

enum Status {
  OPEN
  IN_PROGRESS
  RESOLVED
  CLOSED
}

enum Priority {
  LOW
  MEDIUM
  HIGH
  CRITICAL
}
